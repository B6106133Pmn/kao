// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// DegreesColumns holds the columns for the "degrees" table.
	DegreesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "degree", Type: field.TypeString},
	}
	// DegreesTable holds the schema information for the "degrees" table.
	DegreesTable = &schema.Table{
		Name:        "degrees",
		Columns:     DegreesColumns,
		PrimaryKey:  []*schema.Column{DegreesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "department", Type: field.TypeString},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:        "departments",
		Columns:     DepartmentsColumns,
		PrimaryKey:  []*schema.Column{DepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DoctorsColumns holds the columns for the "doctors" table.
	DoctorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "tel", Type: field.TypeString},
		{Name: "degree_id", Type: field.TypeInt, Nullable: true},
		{Name: "department_id", Type: field.TypeInt, Nullable: true},
		{Name: "doctor_id", Type: field.TypeInt, Nullable: true},
	}
	// DoctorsTable holds the schema information for the "doctors" table.
	DoctorsTable = &schema.Table{
		Name:       "doctors",
		Columns:    DoctorsColumns,
		PrimaryKey: []*schema.Column{DoctorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "doctors_degrees_doctor",
				Columns: []*schema.Column{DoctorsColumns[5]},

				RefColumns: []*schema.Column{DegreesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "doctors_departments_doctor",
				Columns: []*schema.Column{DoctorsColumns[6]},

				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "doctors_nametitles_doctor",
				Columns: []*schema.Column{DoctorsColumns[7]},

				RefColumns: []*schema.Column{NametitlesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NametitlesColumns holds the columns for the "nametitles" table.
	NametitlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name_title", Type: field.TypeString},
	}
	// NametitlesTable holds the schema information for the "nametitles" table.
	NametitlesTable = &schema.Table{
		Name:        "nametitles",
		Columns:     NametitlesColumns,
		PrimaryKey:  []*schema.Column{NametitlesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DegreesTable,
		DepartmentsTable,
		DoctorsTable,
		NametitlesTable,
	}
)

func init() {
	DoctorsTable.ForeignKeys[0].RefTable = DegreesTable
	DoctorsTable.ForeignKeys[1].RefTable = DepartmentsTable
	DoctorsTable.ForeignKeys[2].RefTable = NametitlesTable
}
